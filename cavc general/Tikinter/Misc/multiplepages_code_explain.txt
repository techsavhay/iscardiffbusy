Create an application with several pops up dialog boxes, i.e Page Frames. Here is a step by step process to create multiple Tkinter Page Frames and link them!

Here are the steps: 
=================

Create three different pages. Here we have three different pages, The start page as the home page, page one, and page two. 
Create a container for each page frame. 
We have four classes. First is the tkinterApp class, where we have initialized the three frames and defined a function show_frame which is called every time the user clicks on a button. 
The StartPage is simple with two buttons to go to Page 1 and Page 2. 
Page 1 has two buttons, One for Page 2 and another to return to Start Page. 
Page 2 also has two buttons, one for Page 1 and others to return to StartPage. 
This is a simplistic application of navigating between Tkinter frames. 
This can be used as a boilerplate for more complex applications and several features can be added. 


Code Explanation:
=================
The code starts by creating a class, tkinterApp.
This class has two main functions: _init_ and show_frame.
The _init_ function is used to initialize the objects in the application.
The first function, _init_ for the class Tk, is used to initialize the object tkinterApp.
It takes two arguments: *args and **kwargs.
The first argument is an empty list of strings, while the second argument is a dictionary of key-value pairs that are passed to various methods in Tkinter.
Next, the code creates a container object called container and packs it into a frame onscreen with side set to “top” and fill set to “both”.
The expand property of container is set to True so that it will automatically be expanded when displayed onscreen.
Finally, grid_rowconfigure() and grid_columnconfigure() are used to configure the rows and columns of container respectively.
Now that everything is setup, the code starts iterating through different page layouts using for loop.
For each layout (StartPage, Page1, Page2), a new frame instance (F) is created and initialized with values from startpage (the first layout), page
The code creates a Tkinter application and defines three frames, StartPage, Page1, and Page2.
The _init_ function for the class tkinterApp is used to initialize the frames and container.
The container is then packed into a Frame object and displayed on-screen.
The code first iterates through a tuple consisting of the different page layouts.
For each layout, a Frame object is created and initialized with the appropriate parameters.
The Frame objects are then placed in respective containers and displayed on-screen.